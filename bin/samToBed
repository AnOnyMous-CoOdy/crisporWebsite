#!/usr/bin/env python

# convert bwa sam ouput to bed file that includes strand and NM tag and source seq id
# similar to gawk 'BEGIN {OFS="\t"; FS="\t"} {strand="+"; if (and($2,16)==16) {strand="-"}; print $3,$4,$4+20,$1,strand}'
# but will extend the end or start by pamlen

# one parameter is length of PAM site to extract

import sys
pamLen = int(sys.argv[1])

# example input:
# t5    272 chrIII  12975327    0   20M *   0   0   CTACTCACCATAATCGAGCA    *   NM:i:5
# t5  272 chrIII  6585026 0   20M *   0   0   CTACTCACCATAATCGAGCA    *   NM:i:5
# t5  256 chrIV   4450550 0   20M *   0   0   TGCTCGATTATGGTGAGTAG    *   NM:i:5

import sys

for line in sys.stdin:
    if line.startswith("@"):
        continue
    l = line.rstrip("\n")
    fs = l.split("\t")
    qName, flag, rName, pos, mapq, cigar, rnext, pnext, tlen, seq, qual = fs[:11]
    pos = int(pos)

    strand = "+"
    if (int(flag) & 16) == 16:
        #print "on neg strand"
        strand = "-"

    assert(cigar=="20M")
    # ARH! SAM IS 1-BASED! !!!
    startPos = pos-1
    endPos = startPos+20

    # no idea why
    #print "strand", strand
    #if strand=="-":
        #print "increasing start"
        #endPos = endPos-1
    #else:
        #print "decreasing end"
        #endPos -= 1
    # end no idea why

    tags = fs[11:]

    for t in tags:
        if t.startswith("NM:i:"):
            editDist = t.split(":")[-1]
            
    if strand=="+":
        endPos += pamLen
    else:
        startPos -= pamLen

    if startPos < 0:
        continue

    nameInfo = [qName, rName, str(startPos), str(endPos), strand, editDist]
    name = "|".join(nameInfo)

    row = [rName, str(startPos), str(endPos), name, editDist, strand]
    print "\t".join(row)


